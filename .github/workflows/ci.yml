name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  schedule:
    # Weekly Monday 9AM build
    # * is a special character in YAML so you have to quote this string
    - cron: '0 9 * * 1'

jobs:
  lint:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - toxenv: style
            name: Code style checks
          - toxenv: bandit
            name: Bandit security audit
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: actions/cache@v3
        id: tox_cache
        with:
          path: ${{ env.pythonLocation }}
          key: tox-install-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - run: pip install tox
        if: steps.tox_cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.toxenv }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - run: tox -e ${{ matrix.toxenv }}
  test:
    name: test
    needs: [ lint ]
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ ubuntu-latest, macos-latest ]
        toxenv: [ py38, py39, py310 ]
        include:
          - toxenv: py38
            python-version: 3.8
          - toxenv: py39
            python-version: 3.9
          - toxenv: py310
            python-version: "3.10"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: actions/cache@v3
        id: tox_cache
        with:
          path: ${{ env.pythonLocation }}
          key: tox-install-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - run: pip install tox
        if: steps.tox_cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.toxenv }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - run: tox -e ${{ matrix.toxenv }}
  test_with_coverage:
    name: ${{ matrix.name }}
    needs: [ lint ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toxenv: [ coverage, jwst-cov, romancal-cov ]
        python-version: [ 3.9 ]
        include:
          - toxenv: coverage
            name: test base library with coverage
          - toxenv: jwst-cov
            name: test JWST pipeline with coverage
          - toxenv: romancal-cov
            name: test Roman pipeline with coverage
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: tox_cache
        with:
          path: ${{ env.pythonLocation }}
          key: tox-install-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - run: pip install tox
        if: steps.tox_cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.toxenv }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml', '**/setup.*') }}
      - run: tox -e ${{ matrix.toxenv }}
  # Kept in a separate job because it needs extra system dependencies
  # that can't be installed by tox.
  build-docs:
    name: Build documentation and check warnings
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install graphviz texlive-latex-extra dvipng
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: pip install tox
      - run: tox -e build-docs
