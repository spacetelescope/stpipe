[tox]
envlist =
    check-{style,security,build}
    test{,-warnings,-cov,-xdist,-oldestdeps,-devdeps,-downstreamdeps}{-nolegacypath}
    test-{jwst,romancal}-xdist
    build-{docs,dist}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}

[testenv:check-security]
description = run bandit to check security compliance
skip_install = true
deps =
    bandit>=1.7
commands =
    bandit -r -ll src

[testenv]
description =
    run tests
    jwst: of JWST pipeline
    romancal: of Romancal pipeline
    oldestdeps: with the oldest supported version of key dependencies
    downstreamdeps: with the downstream packages that depend on stpipe
    warnings: treating warnings as errors
    cov: with coverage
    xdist: using parallel processing
change_dir =
    jwst,romancal: {env_tmp_dir}
allowlist_externals =
    git
    jwst,romancal: bash
extras =
    test
deps =
    xdist: pytest-xdist
    cov: pytest-cov
    oldestdeps: minimum_dependencies
    devdeps: astropy>=0.0.dev0
    downstreamdeps: jwst
    downstreamdeps: stdatamodels
    downstreamdeps: roman_datamodels
pass_env =
    CRDS_*
    CI
    romancal: WEBBPSF_PATH
set_env =
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
    jwst,downstreamdeps: CRDS_SERVER_URL=https://jwst-crds.stsci.edu
    jwst: CRDS_SERVER_URL = https://jwst-crds.stsci.edu
    jwst,romancal: CRDS_PATH = {package_root}/crds_cache
    jwst,romancal: CRDS_CLIENT_RETRY_COUNT = 3
    jwst,romancal: CRDS_CLIENT_RETRY_DELAY_SECONDS = 20
    romancal: CRDS_SERVER_URL=https://roman-crds.stsci.edu
package =
    !cov: wheel
    cov: editable
commands_pre =
    oldestdeps: minimum_dependencies stpipe --filename requirements-min.txt
# this package doesn't depend on numpy directly but the old versions of dependencies
# will allow numpy 2.0 to be installed (and won't work with numpy 2.0). So we pin it.
    oldestdeps: pip install numpy<2.0
    oldestdeps: pip install -r requirements-min.txt
    jwst,romancal: bash -c "pip freeze -q | grep 'stpipe @' > {env_tmp_dir}/requirements.txt"
    jwst: git clone https://github.com/spacetelescope/jwst.git
    romancal: git clone https://github.com/spacetelescope/romancal.git
    jwst: pip install -e jwst[test]
    romancal: pip install -e romancal[test]
    jwst,romancal: pip install -r {env_tmp_dir}/requirements.txt
    pip freeze
commands =
    pytest \
    warnings: -W error \
    nolegacypath: -p no:legacypath \
    xdist: -n auto \
    jwst: jwst \
    romancal: romancal \
    cov: --cov={package_root} --cov-config={package_root}/pyproject.toml --cov-report=term-missing --cov-report=xml \
    {posargs}

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
extras =
    docs
commands =
    sphinx-build -W docs docs/_build

[testenv:build-dist]
description = build wheel and sdist
skip_install = true
deps =
    build
commands =
    python -m build .
